'''# Load spaCy model
@st.cache_resource
def load_spacy_model():
    try:
        nlp = spacy.load('en_core_web_sm', disable=['parser', 'ner'])
        return nlp
    except Exception as e:
        st.error(f"Error loading spaCy model: {e}")
        return None

nlp = load_spacy_model()

# Preprocessing Function Using spaCy
def spacy_preprocess(text):
    if not isinstance(text, str):
        return ""
    if nlp is None:
        st.error("spaCy model not loaded. Cannot preprocess text.")
        return ""

    text = unicodedata.normalize('NFKD', text).encode('ascii', 'ignore').decode('utf-8', 'ignore')
    doc = nlp(text.lower())
    tokens = [token.lemma_ for token in doc if not token.is_stop and token.is_alpha]
    return " ".join(tokens)
'''